// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package cardanowallet.actions;

import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;

/**
 * Based on a given Passphrase this will generate a 32 char key to be used for the encryption module
 */
public class GenerateEncryptionKey extends CustomJavaAction<java.lang.String>
{
	private java.lang.String Passphrase;

	public GenerateEncryptionKey(IContext context, java.lang.String Passphrase)
	{
		super(context);
		this.Passphrase = Passphrase;
	}

	@java.lang.Override
	public java.lang.String executeAction() throws Exception
	{
		// BEGIN USER CODE
		MessageDigest digest = MessageDigest.getInstance("SHA-256");
		byte[] hashBytes = digest.digest(Passphrase.getBytes(StandardCharsets.UTF_8));
		String hash = bytesToHex(hashBytes);
		return hash;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "GenerateEncryptionKey";
	}

	// BEGIN EXTRA CODE
	// Add the bytesToHex method
	private String bytesToHex(byte[] bytes) {
		StringBuilder result = new StringBuilder();
		for (byte b : bytes) {
			result.append(String.format("%02x", b));
		}
		return result.toString();
	}
	// END EXTRA CODE
}
