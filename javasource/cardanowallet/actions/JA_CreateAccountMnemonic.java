// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package cardanowallet.actions;

import com.bloxbean.cardano.client.account.Account;
import com.bloxbean.cardano.client.common.model.Network;
import com.bloxbean.cardano.client.common.model.Networks;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.systemwideinterfaces.core.*;

public class JA_CreateAccountMnemonic extends CustomJavaAction<IMendixObject>
{
	private IMendixObject __WalletAPI;
	private cardanowallet.proxies.WalletAPI WalletAPI;

	public JA_CreateAccountMnemonic(IContext context, IMendixObject WalletAPI)
	{
		super(context);
		this.__WalletAPI = WalletAPI;
	}

	@java.lang.Override
	public IMendixObject executeAction() throws Exception
	{
		this.WalletAPI = this.__WalletAPI == null ? null : cardanowallet.proxies.WalletAPI.initialize(getContext(), __WalletAPI);

		// BEGIN USER CODE
		Network selectedNetwork;
		String networkString = this.WalletAPI.getCardanoNetwork().name();
		if(networkString.equalsIgnoreCase("preprod")) {
			selectedNetwork = Networks.preprod();
		} else if(networkString.equalsIgnoreCase("testnet")) {
			selectedNetwork = Networks.testnet();
		} else if(networkString.equalsIgnoreCase("preview")) {
			selectedNetwork = Networks.preview();
		} else {
			selectedNetwork = Networks.mainnet();
		}
		Account newAccount = new Account(selectedNetwork);
		// Account senderAccount = new Account(Networks.preprod(), this.mnemonic); encryption.proxies.PGPCertificate.initialize
		cardanowallet.proxies.WalletAPI wallet = cardanowallet.proxies.WalletAPI.load(getContext(),null);

		// Account newAccount = new Account(selectedNetwork);
		wallet.setBaseAddress(newAccount.baseAddress());
		wallet.setStakeAddress(newAccount.stakeAddress());
		return wallet.getMendixObject();
		//throw new com.mendix.systemwideinterfaces.MendixRuntimeException("Java action was not implemented");
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "JA_CreateAccountMnemonic";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
